---
- hosts: lambda-build
  remote_user: ec2-user #intended for use on Amazon Linux x64 to be compatible with Lambda
  become_method: sudo
  become_user: root
  vars_files:
    - ../vars/public.yaml

  tasks:
  - name: remove old working directories
    file: path={{ tmp }}  state=absent
    become: true

  - name: Ensure working directories
    file: path={{ item }}  state=directory mode=0777
    with_items:
      - "{{ tmp }}"
      - "{{ tmp_poppler_path }}"
      - "{{ poppler_output }}"
      - "{{ poppler_path }}"

  - name: tell the host about our servers it might want to connect to and accept their keys
    become: true
    lineinfile:
        dest: /root/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa gitlab.outlandish.com') }}"
        regexp: "^gitlab\\.outlandish\\.com"

  - name: Ensure git
    become: true
    yum: name=git state=present

  - name: Ensure build tools
    become: true
    yum: name={{item}} state=latest
    with_items:
       - gcc44
       - gcc-c++
       - libgcc44
       - cmake

#  - name: Uninstall old nodejs # only needed if old version of node is already installed
#    become: true
#    yum: name=nodejs state=absent

  - name: Download node setup files
    get_url: url=https://rpm.nodesource.com/setup_4.x dest=/tmp/node_setup

  - name: Run Node setup
    become: true
    command: "bash /tmp/node_setup"

  - name: Ensure node and npm
    become: true
    yum: name=nodejs state=latest
    with_items:
       - nodejs

  - name: Ensure poppler dependences
    become: true
    yum: name={{item}} state=latest
    with_items:
      - fontconfig
      - fontconfig-devel
      - cairo
      - libpng

  - name: install utils included in lambda
    become: true
    yum: name={{item}} state=latest
    with_items:
      - ImageMagick.x86_64
      - ghostscript.x86_64


  - name: Download and unarchive poppler-utils src
    unarchive: "src=https://poppler.freedesktop.org/{{ poppler_version }}.tar.xz dest={{ tmp_poppler_path }} copy=no"

  - name: Checkout the poppler test data
    git: repo=git://git.freedesktop.org/git/poppler/test dest={{ poppler_path }}/testfiles update=no

  - name: Running ./configure for Poppler-utils
    command: "./configure --prefix={{ poppler_output }}   chdir={{ poppler_path}} --with-testdatadir={{ poppler_path }}/testfiles --enable-xpdf-headers --disable-shared  --enable-xpdf-headers --sysconfdir=/etc  --enable-cmyk"

  - name: Running "make" for Poppler-utils
    command: "make  chdir={{ poppler_path }}"

  - name: Running "make install" for Poppler-utils
    command: "make install chdir={{ poppler_path }}"

  - name: Make poppler executables executable
    become: true
    file:
      path: "{{ poppler_output }}"
      mode: u=rwX,g=rX,o=rX
      recurse: yes

  - name: Zip project executables
    command: "zip -r {{ poppler_zip }} . chdir={{ poppler_output }}"


  - name: Copy zipped executables to S3
    s3: "bucket={{ s3_output_bucket }} object=/poppler/compiled.zip src={{ poppler_zip }} mode=put"





